name: CI

on:
  workflow_dispatch: # allows manual triggering
    inputs:
      create_release:
        description: 'Create new release'
        required: true
        type: boolean
  push:
    paths: ['.github/workflows/**', 'CMakeLists.txt', 'Makefile', '**.h', '*.c', '**.cpp']
  pull_request:
    types: [opened, synchronize, edited, reopened, review_requested, ready_for_review]
    paths: ['CMakeLists.txt', 'Makefile', '**.h', '*.c', '**.cpp']

env:
 BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  ubuntu-latest:
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v1

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential
          wget https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.gz
          tar xzf boost_1_81_0.tar.gz -C . --strip-components=1 boost_1_81_0/boost
          

      - name: Build
        id: make_build
        run: |
          make
        
      - name: Zip executables
        run: zip alpaca.http-linux.zip server
        
      - name: Clear
        run: |
           rm -rf boost
           rm boost_1_81_0.tar.gz
          

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: |
            alpaca.http-linux.zip



  windows-latest:
    runs-on: windows-latest

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v1

      - name: Build
        id: cmake_build
        run: |
          Invoke-WebRequest -Uri https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.zip -OutFile boost_1_81_0.zip
          7z x boost_1_81_0.zip boost_1_81_0/boost/*
          mv boost_1_81_0/boost/ boost
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release

      - name: Pack artifacts
        id: pack_artifacts
        run: |
          7z a alpaca.http-win.zip .\build\Release\*


      - name: Clear
        run: |
          Remove-Item -Path boost_1_81_0 -Recurse -Force
          Remove-Item -Path boost -Recurse -Force
          Remove-Item -Path boost_1_81_0.zip -Force
          
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows
          path: |
            alpaca.http-win.zip


  release:
    runs-on: ubuntu-latest
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}
    needs: 
      - windows-latest
      - ubuntu-latest

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Set commit hash variables
        id: commit
        uses: pr-mpt/actions-commit-hash@v2

      - name: Create release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit.outputs.short }}

      - name: Upload windows release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: windows/alpaca.http-win.zip
          asset_name: alpaca.http-win.zip
          asset_content_type: application/octet-stream

      - name: Upload linux release
        
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: linux/alpaca.http-linux.zip
          asset_name: alpaca.http-linux.zip
          asset_content_type: application/octet-stream
